package application;

import java.net.URL;
import java.sql.ResultSet;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

public class TransTable implements Initializable {

    @FXML
    private TableView<TimeTableClass> table;

    @FXML
    private TableColumn<TimeTableClass, String> day;

    @FXML
    private TableColumn<TimeTableClass, String>clock;

    @FXML
    private TableColumn<TimeTableClass, String> DID;

    @FXML
    private TableColumn<TimeTableClass, String> Plate_Num;

    @FXML
    private TableColumn<TimeTableClass, String> LName;

    @FXML
    private TableColumn<TimeTableClass, String> passing;

    @FXML
    private Button back;

    @FXML
    private Button refresh;

    @FXML
    void Back(ActionEvent event) {
Main.PrimaryStage.setScene(Main.transScene);   
Main.PrimaryStage.centerOnScreen();

    }

    ObservableList<TimeTableClass> list =  FXCollections.observableArrayList() ; 

    URL arg0;
    ResourceBundle arg1;
    
    @FXML
    void refresh(ActionEvent event) {
    	initialize(arg0,arg1);
		
	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		list.clear();
		try {	
			String daysel=TransScene.daySelected;
			String timesel=TransScene.timeSelected;
			System.out.println("SELECT * FROM mydb.timetable t WHERE t.Day= '"+daysel+"' AND t.Clock= '"+timesel+"'");
			ResultSet rs = DataBaseConnection.read("SELECT * FROM mydb.timetable t WHERE t.Day= '"+daysel+"' AND t.Clock= '"+timesel+"'") ; 
			
			while (rs.next()) { 
				
				list.add(new TimeTableClass(rs.getString("Day") ,rs.getString("DriverID"),rs.getString("LName"),rs.getString("PlateNum"),rs.getInt("Vehicles_Passing_per_hr"),rs.getString("Clock"))); 
			}
		}
	 catch(Exception e) {
		e.printStackTrace();
	}
		LName.setCellValueFactory(new PropertyValueFactory<>("Lname") );
		DID.setCellValueFactory(new PropertyValueFactory<>("Dname") );
		passing.setCellValueFactory(new PropertyValueFactory<>("ratio") );
		clock.setCellValueFactory(new PropertyValueFactory<>("Time") );
		Plate_Num.setCellValueFactory(new PropertyValueFactory<>("Pnum") );
		day.setCellValueFactory(new PropertyValueFactory<>("day") );
		table.setItems(list) ; 
		
	}
    }




